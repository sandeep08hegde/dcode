User test
package tests;

import base.BasePage;
import org.testng.Assert;
import org.testng.annotations.*;
import pages.LoginPage;
import pages.RegistrationPage;
import utils.ExcelUtil;

public class UserTests extends BasePage {
    RegistrationPage registrationPage;
    LoginPage loginPage;

    @BeforeSuite
    public void setUpSuite() {
        initializeDriver();
    }

    @BeforeMethod
    public void setUp() {
        driver.get("https://parabank.parasoft.com/parabank/index.htm");
        registrationPage = new RegistrationPage(driver);
        loginPage = new LoginPage(driver);
    }

    @Test(priority = 1)
    public void testUserRegistration() {
        String[] userData = ExcelUtil.readExcelData("UserDetails.xlsx", "Sheet1");
        String firstName = userData[0];
        String lastName = userData[1];
        String username = userData[2];
        String password = userData[3];

        registrationPage.registerUser(firstName, lastName, username, password);
        Assert.assertTrue(registrationPage.isRegistrationSuccess(), "User Registration Failed!");
    }

    @Test(priority = 2, dependsOnMethods = {"testUserRegistration"})
    public void testUserLogin() {
        String[] userData = ExcelUtil.readExcelData("UserDetails.xlsx", "Sheet1");
        String username = userData[2];
        String password = userData[3];

        loginPage.login(username, password);
        Assert.assertTrue(loginPage.isLogoutButtonVisible(), "Login Failed!");
    }

    @AfterSuite
    public void tearDown() {
        closeBrowser();
    }
}


register test
package testcases;

import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import pageobjects.RegistrationPage;
import utils.ExcelUtil;
import utils.LoggerUtil;

public class RegistrationTest extends BaseTest {
    RegistrationPage registrationPage;
    String testDataFilePath = "src/test/resources/testdata.xlsx";

    @BeforeMethod
    public void setUp() {
        registrationPage = new RegistrationPage(driver);
    }

    @Test
    public void testRegisterUser() {
        LoggerUtil.log("Starting test: Register User");
        String[] userData = ExcelUtil.readData(testDataFilePath, "Sheet1", 1);
        registrationPage.registerUser(userData[0], userData[1], userData[2], userData[3]);

        // Verify the registration success message
        String expectedMessage = "Welcome " + userData[2] + " & Your account was created successfully. You are now logged in.";
        Assert.assertTrue(registrationPage.getRegistrationSuccessMessage().contains(expectedMessage));
    }
}

login test
package testcases;

import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import pageobjects.LoginPage;
import utils.ExcelUtil;
import utils.LoggerUtil;

public class LoginTest extends BaseTest {
    LoginPage loginPage;
    String testDataFilePath = "src/test/resources/testdata.xlsx";

    @BeforeMethod
    public void setUp() {
        loginPage = new LoginPage(driver);
    }

    @Test
    public void testUserLogin() {
        LoggerUtil.log("Starting test: User Login");
        String[] userData = ExcelUtil.readData(testDataFilePath, "Sheet1", 1);
        loginPage.login(userData[2], userData[3]);

        // Verify login success
        String welcomeText = driver.findElement(By.cssSelector(".title")).getText();
        Assert.assertTrue(welcomeText.contains(userData[0]));
    }


}


package utils;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class ExcelUtil {

    // Method to read all data from a given Excel sheet and return it as a 2D String array
    public static String[][] readExcelData(String fileName, String sheetName) {
        String[][] data = null;
        try (FileInputStream fis = new FileInputStream(new File(fileName));
             Workbook workbook = new XSSFWorkbook(fis)) {

            Sheet sheet = workbook.getSheet(sheetName);
            int rowCount = sheet.getPhysicalNumberOfRows();
            int colCount = sheet.getRow(0).getLastCellNum();

            data = new String[rowCount - 1][colCount]; // Ignoring the header row

            for (int i = 1; i < rowCount; i++) { // Start from 1 to skip the header row
                Row row = sheet.getRow(i);
                for (int j = 0; j < colCount; j++) {
                    data[i - 1][j] = row.getCell(j).getStringCellValue();
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return data;
    }
}


new test user
package tests;

import base.BasePage;
import org.testng.Assert;
import org.testng.annotations.*;
import pages.RegistrationPage;
import pages.LoginPage;
import utils.ExcelUtil;

public class UserTest extends BasePage {
    private RegistrationPage registrationPage;
    private LoginPage loginPage;

    @BeforeSuite
    public void setUpSuite() {
        // Initialize WebDriver and set up logging/reporting
        initializeDriver();
    }

    @BeforeMethod
    public void setUp() {
        // Initialize the page objects before each test
        registrationPage = new RegistrationPage(driver);
        loginPage = new LoginPage(driver);
    }

    @Test(priority = 1)
    public void testUserRegistrationAndLogin() {
        // Read test data from Excel
        String[][] userData = ExcelUtil.readExcelData("UserDetails.xlsx", "Sheet1");

        for (String[] user : userData) {
            String firstName = user[0];
            String lastName = user[1];
            String address = user[2];
            String city = user[3];
            String state = user[4];
            String zipCode = user[5];
            String phone = user[6];
            String ssn = user[7];
            String username = user[8];
            String password = user[9];

            // Step 1: Register a New User
            driver.get("https://parabank.parasoft.com/parabank/register.htm");
            registrationPage.registerUser(firstName, lastName, username, password);

            // Verify Registration Success
            boolean isRegistrationSuccessful = registrationPage.isRegistrationSuccess(username);
            Assert.assertTrue(isRegistrationSuccessful, "User registration failed for: " + username);

            if (isRegistrationSuccessful) {
                logger.info("User registered successfully: " + username);
            } else {
                logger.error("Registration failed for user: " + username);
                continue; // Skip login if registration fails
            }

            // Step 2: Log in with the Registered User
            driver.get("https://parabank.parasoft.com/parabank/login.htm");
            loginPage.login(username, password);

            // Verify Login Success
            boolean isLoginSuccessful = loginPage.isLoginSuccess(firstName, lastName);
            Assert.assertTrue(isLoginSuccessful, "User login failed for: " + username);

            if (isLoginSuccessful) {
                logger.info("Login successful for user: " + username);
            } else {
                logger.error("Login failed for user: " + username);
            }
        }
    }

    @AfterMethod
    public void tearDown() {
        // Clean up after each test method
        driver.manage().deleteAllCookies();
    }

    @AfterSuite
    public void closeBrowser() {
        // Quit WebDriver after all tests are done
        driver.quit();
    }
}
